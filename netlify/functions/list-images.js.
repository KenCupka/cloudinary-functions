// cloudinary-functions/netlify/functions/list-images.js

const cloudinary = require('cloudinary').v2;

// Configure Cloudinary with environment variables
cloudinary.config({
  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,
  api_key: process.env.CLOUDINARY_API_KEY,
  api_secret: process.env.CLOUDINARY_API_SECRET,
});

exports.handler = async (event, context) => {
  try {
    const headers = {
      'Access-Control-Allow-Origin': 'https://freshpressburger.com', // Your main domain
      'Access-Control-Allow-Methods': 'GET, OPTIONS',
      'Access-Control-Allow-Headers': 'Content-Type',
    };

    if (event.httpMethod === 'OPTIONS') {
      return {
        statusCode: 204,
        headers,
        body: '',
      };
    }

    if (event.httpMethod !== 'GET') {
      return {
        statusCode: 405,
        headers,
        body: JSON.stringify({ error: `Method ${event.httpMethod} Not Allowed` }),
      };
    }

    const { uploadPreset, max_results = '100' } = event.queryStringParameters;

    if (!uploadPreset) {
      return {
        statusCode: 400,
        headers,
        body: JSON.stringify({ error: 'uploadPreset parameter is required.' }),
      };
    }

    const resources = await cloudinary.api.resources({
      type: 'upload',
      prefix: uploadPreset,
      max_results: parseInt(max_results),
    });

    return {
      statusCode: 200,
      headers,
      body: JSON.stringify({ resources: resources.resources }),
    };
  } catch (error) {
    console.error('Error fetching images:', error);
    return {
      statusCode: 500,
      headers: {
        'Access-Control-Allow-Origin': 'https://freshpressburger.com',
      },
      body: JSON.stringify({ error: 'Failed to fetch images.' }),
    };
  }
};
